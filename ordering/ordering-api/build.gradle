plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.6.RELEASE'
    id "nu.studer.jooq" version "3.0.2"
    id "org.flywaydb.flyway" version "5.2.4"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.bmuschko.docker-spring-boot-application"
apply plugin: 'org.springframework.boot'
apply plugin: "nu.studer.jooq"
apply plugin: "org.flywaydb.flyway"

ext['jooq.version'] = '3.11.2'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-jooq'
    compile project(':ordering:ordering-infrastructure')
    compile 'org.axonframework:axon-spring-boot-starter:4.0'
    compile 'com.h2database:h2'
    compile 'org.flywaydb:flyway-core'
    jooqRuntime 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok:1.16.22'

    testCompile 'org.assertj:assertj-core:3.11.1'
    testCompile 'org.mockito:mockito-junit-jupiter:2.23.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'
}

[bootJar, bootRun]*.enabled = true
jar.enabled = false

repositories {
    jcenter()
    mavenLocal()
}

docker {
    springBootApplication {
        baseImage = 'openjdk:8-jre-alpine'
    }
}

jooq {
    ordering(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = 'jdbc:h2:~/db/ordering_db'
            user = 'sa'
            password = ''
            schema = 'public'
        }
        generator {
            database {
                name = 'org.jooq.meta.h2.H2Database'
                inputSchema = 'public'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = false
                fluentSetters = true
            }
            target {
                packageName = 'io.github.bhuwanupadhyay.ordering.query.gen'
//                directory = 'src/main/generated/java'
            }
        }
    }
}


flyway {
    url = 'jdbc:h2:~/db/ordering_db'
    user = 'sa'
    password = ''
    schemas = ['public']
    locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

generateOrderingJooqSchemaSource.dependsOn flywayMigrate

test.dependsOn flywayClean