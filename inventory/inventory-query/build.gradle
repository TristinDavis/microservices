plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.6.RELEASE'
}

ext {
    axonVersion = '3.4.2'
    springfoxSwagger = '2.9.2'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.bmuschko.docker-spring-boot-application"
apply plugin: 'org.springframework.boot'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile project(":inventory:inventory-kernel")
    
    compile "org.axonframework:axon-spring-boot-starter:4.0.3"
    compile "org.axonframework:axon-mongo:${axonVersion}"

    compile 'org.springframework.cloud:spring-cloud-starter'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'com.h2database:h2'

    compile 'org.springframework.retry:spring-retry'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    compile "io.springfox:springfox-swagger2:${springfoxSwagger}"
    compile "io.springfox:springfox-data-rest:${springfoxSwagger}"

    testCompile 'org.assertj:assertj-core:3.11.1'
    testCompile 'org.mockito:mockito-junit-jupiter:2.23.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'
    testCompile 'io.rest-assured:rest-assured:3.2.0'
    testCompile "org.axonframework:axon-test:${axonVersion}"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
    }
}

[bootJar, bootRun]*.enabled = true
jar.enabled = false

docker {
    springBootApplication {
        baseImage = 'openjdk:8-jre-alpine'
    }
}